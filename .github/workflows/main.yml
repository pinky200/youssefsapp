name: CI/CD Pipeline

on:
  push:
    branches: [main, staging, production]
  pull_request:
    branches: [main]

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-push:
    runs-on: self-hosted
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      IMAGE_TAG: ${{ github.sha }}
      FRONT_REPO: ${{ secrets.DOCKER_USERNAME }}/frontapp
      BACK_REPO: ${{ secrets.DOCKER_USERNAME }}/backapp

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # FRONTEND
      - name: Build frontend image
        working-directory: ./frontapp
        run: |
          docker build -t $FRONT_REPO:${IMAGE_TAG} -t $FRONT_REPO:latest .

      - name: Push frontend image
        run: |
          docker push $FRONT_REPO:${IMAGE_TAG}
          docker push $FRONT_REPO:latest

      # BACKEND
      - name: Build backend image
        working-directory: ./backapp
        run: |
          docker build -t $BACK_REPO:${IMAGE_TAG} -t $BACK_REPO:latest .

      - name: Push backend image
        run: |
          docker push $BACK_REPO:${IMAGE_TAG}
          docker push $BACK_REPO:latest

  deploy:
    runs-on: self-hosted
    needs: build-push
    environment:
      name: ${{ github.ref == 'refs/heads/production' && 'production' || github.ref == 'refs/heads/staging' && 'staging' || 'development' }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Determine environment
        id: env
        run: |
          if [ "${{ github.ref }}" == "refs/heads/production" ]; then
            echo "ENV=production" >> $GITHUB_OUTPUT
            echo "VALUES_FILE=values-prod.yaml" >> $GITHUB_OUTPUT
            echo "RELEASE_NAME=youssefsapp-prod" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" == "refs/heads/staging" ]; then
            echo "ENV=staging" >> $GITHUB_OUTPUT
            echo "VALUES_FILE=values-staging.yaml" >> $GITHUB_OUTPUT
            echo "RELEASE_NAME=youssefsapp-staging" >> $GITHUB_OUTPUT
          else
            echo "ENV=development" >> $GITHUB_OUTPUT
            echo "VALUES_FILE=values.yaml" >> $GITHUB_OUTPUT
            echo "RELEASE_NAME=youssefsapp-dev" >> $GITHUB_OUTPUT
          fi


      - name: Deploy to ${{ steps.env.outputs.ENV }}
        run: |
          helm upgrade --install youssefsapp ./helm/youssefsapp/ \
            -n ${{ steps.env.outputs.ENV }} \
            -f ./helm/youssefsapp/${{ steps.env.outputs.VALUES_FILE }} \
            --set frontend.image.repository=$FRONT_REPO \
            --set frontend.image.tag=${IMAGE_TAG} \
            --set backend.image.repository=$BACK_REPO \
            --set backend.image.tag=${IMAGE_TAG} \
            --set imagePullSecrets[0].name=regcred

      - name: Verify deployment
        run: |
          echo "Deployment status for ${{ steps.env.outputs.ENV }}:"
          kubectl get all -n ${{ steps.env.outputs.ENV }}
          kubectl get ingress -n ${{ steps.env.outputs.ENV }}
